import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

data={
    'Movie':['Inception','Interseller','The Dark Knight','Avatar'],
    'Genre':['Thriller','Drama','Action','Romance','Adventure']
}
df=pd.DataFrame(data)

vectorizer=TfidfVectorizer()
genrematrix=vectorizer.fit_transform(df['Genre'])

cosine_sim = cosine_similarity(genre_matrix)


def recommend(movieName,df,similarity_matrix):
    if movieName not in df['Movie'].values:
        return "Movie not found in dataset!"
    idx=df[df['Movie']==movieName].index[0]
    scores=list(enumerate(similarity_matrix[idx]))
    scores=sorted(scores,key=lambda x:x[1],reverse=True)
    recommended_movies=[df['Movie'][i[0]] for i in scores[1:3]]
    return recommended_movies


movie_to_search='Inception'
recommendations=recommend(movie_to_search,df,cosine_sim)
print(f"Movies similar to'{movie_to_search}':{recommendations}")
